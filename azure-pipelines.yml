# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.13' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/bitbucket.org/dexterchaney/whoville' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    echo "Mod init"
    go mod init
    echo "Mod download"
    go mod download
    echo "Compile start"
    CGO_ENABLED=0 GOBIN= GOOS=linux GOARCH=amd64 go install -v -a -ldflags '-w' bitbucket.org/dexterchaney/whoville/vaultconfig
    echo "Compile Complete"
    cp vaultconfig $(Build.ArtifactStagingDirectory)
    if [[ ! -f vaultconfig ]] ; then
        echo 'File "vaultconfig" was not built, aborting.'
        exit 1
    fi
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'
