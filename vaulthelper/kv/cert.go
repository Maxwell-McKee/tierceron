package kv

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _certs_cert_files_dcidevpublic_pem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x95\xcb\x92\xab\x38\x12\x86\xf7\x3c\x05\xd1\xcb\xf1\xe9\x63\x0a\xdb\x65\x3c\x11\xb5\x90\xb8\x08\x30\xc2\x20\xc0\x06\xef\xb8\x59\x80\xb1\xc1\x80\x11\xf8\xe9\x27\xaa\xaa\x3b\xa6\xbb\xcf\x44\x8c\x96\x19\xf9\xa7\x52\xfa\xf5\x29\xfb\x67\x52\xe5\xe9\xf0\x71\x08\xf8\x0f\x5e\x69\x6e\x71\x79\xe7\xe5\xe6\x3e\x74\x4d\xcd\x1f\xe3\xba\xcc\xe2\x21\xcf\x7e\xf0\xb2\xcd\x7f\xf0\xff\xfa\x99\xe5\x53\x5a\xc4\x59\x3e\xfe\x4c\x9b\x1b\xc7\x95\x7d\xff\xcc\xbb\x0f\x99\xff\xe0\x03\xef\x07\xef\xf9\xfc\x07\x0f\xba\xf2\xd5\xdc\xe3\x1f\xbc\xc5\x7f\xf0\x5e\xda\x0c\x43\x9f\xc5\x75\xfe\x83\x3f\xf0\x1f\xfc\x6f\xa8\x51\xe2\x2c\x9b\x3f\xe5\x3f\x78\xe3\x9e\xfe\xfc\xed\x07\xff\xb5\x75\x31\x0c\xed\xbf\x97\xcb\x34\xef\x86\xfe\x27\x6d\xb2\x3f\xb3\x96\x5d\xde\x36\x7d\x39\x34\xdd\xbc\xfc\xa3\x0d\xd4\xf0\x5f\x45\x78\x2f\x4f\x9f\x5d\xce\xcb\x79\x37\x94\x97\x32\x8d\x87\x9c\x07\xcf\xa1\x68\xba\x72\x98\xf9\xdf\x79\x24\x72\xdc\xef\x9f\x0b\xaa\xc8\xb0\x79\x59\x25\xbe\xa1\x19\x32\xf0\xd5\xaf\x28\x87\x0d\x43\xc3\x2f\x59\x86\xf0\x49\x01\x33\x20\xa0\x86\x09\x9c\x4c\xe9\x53\xb6\x4b\xdd\xb1\xc1\x40\x40\xb2\xf7\x40\x9e\x91\xac\x14\x57\x85\x32\x0b\x00\x36\x90\x80\xdd\x9e\xc9\x6e\xa4\x70\x47\xd7\x45\x2a\x33\x8f\xc1\x4b\x75\x31\x58\x23\xf0\x16\xa8\x32\xc4\xba\x1b\x9a\x6d\x7e\xdb\x3d\x23\x5f\xf5\x31\x54\xbf\xe2\x70\xc2\xfb\x40\xb4\xc7\x4c\x27\xaf\x33\xd2\xfa\xb3\xaf\xc6\x1c\x86\xf4\x5b\x54\x60\x42\xc4\x9d\x1a\x9d\xc8\x35\xf7\x36\x55\x22\x0a\xbd\xa1\xd6\xcf\x68\x5e\x4f\x96\x0f\x3a\x48\xed\x23\x04\xbd\x6f\xa2\x42\xc8\x74\xf0\x6e\xcd\xbb\xea\x1c\x9a\x02\x97\xce\x9b\x7b\x22\x92\xe2\x8c\xc8\xc6\xba\xd9\x63\xe2\xed\xe6\x73\x08\xc7\x54\xac\x85\x64\x65\x6e\xac\x97\xfa\xc2\xca\x77\x07\x60\xc2\x0f\x22\x4a\x94\x20\xed\x7a\xd6\xaf\x34\x10\x8f\x15\x97\x85\x66\x6d\xa8\x76\x9d\xde\x49\x7b\xbe\xd5\x55\x14\x92\xda\x50\xb5\xb7\x0c\x15\x63\x7a\xab\x85\xdc\x03\x83\xa1\xa6\x33\x86\xeb\x50\xf1\xd5\x35\x56\xf0\x84\x2b\x83\xd9\x3e\x66\xf8\xd8\x84\x9c\xe2\x1b\xec\x1f\x41\xe6\xf8\x6a\x81\xa1\xf4\x7d\xb4\x09\x47\x04\xed\x86\xe8\x54\x3f\x0d\xd5\x1e\x93\x3b\x99\x13\x91\xd1\xe3\x4d\xeb\xe3\x13\x29\xb8\x0c\x1d\xaf\x98\x50\xa6\xd1\x48\x39\xba\xae\xa2\x00\xe9\x61\xdd\x48\x9d\x23\xbb\x89\x4e\xa4\xce\xca\xaf\xfb\x60\x94\xaa\xe5\x3f\x1d\x01\x6e\x00\x38\xb0\x36\xa0\xc2\xc0\x67\xc2\x1e\x34\x06\x04\xae\x7c\xaf\x9c\x5a\x0a\xb3\xe6\x9a\x3a\x8d\xef\x5b\xbb\x5d\x21\x4d\xd6\x28\xae\xf2\x0b\x8b\xdf\x75\xa7\x9d\xba\x60\xe1\x0a\xc6\x29\xdc\x94\x8b\x37\x4e\xa3\xa1\xb6\x11\x26\x0a\xd6\x5a\x1b\xc7\x6d\xa8\x3f\xd1\x8a\x9e\xba\x75\xf7\xc0\xca\x6a\xf0\xf0\xa4\xc8\x91\xdb\x4e\xb7\x70\xc8\x17\xa3\x33\xdd\xea\x52\x4e\x58\xb8\x30\x36\xc2\x4c\xea\xbd\x4a\xb9\x60\xa3\x82\x39\x7c\xb3\x33\xbb\x02\x54\x6d\xaf\x8b\xa1\xf2\xd7\x9a\xf9\x64\x2c\x14\x20\xf4\xd7\xf2\x7e\xbc\xb6\x5b\x55\x47\x4f\x29\x89\x89\x92\x68\x4d\xbd\xec\xbc\x61\x5b\xc2\x36\x0c\x11\x99\xb9\x2a\xb4\x74\x04\xb7\xe2\xd0\x6f\xe6\x85\x67\xca\xd5\x73\x4a\xd2\x73\xbd\x35\xd5\x9e\x4d\x97\x5b\x7f\xf0\xf1\xb6\x3f\xc9\x56\xb0\xa2\xa5\x7f\x1c\xd8\x03\xbc\xaf\xa6\x5a\x6b\xb6\xa5\x77\xcf\x83\xf2\xc5\xd1\x83\xe9\xed\x97\x8b\x76\xc0\x20\x59\x8a\xfa\xad\x69\x23\xb2\x18\xe6\xc2\x6c\x17\x83\x63\x8f\x26\x58\xa8\x4a\x7a\x98\xbb\x71\xd2\x3b\xa6\xcf\xbe\x6b\x6f\xc5\x77\x26\x5b\xc7\xb1\x19\xdb\x9e\x1d\x38\x09\x91\x59\xac\xe3\x59\xd8\xcc\xdb\x7e\x3e\x5c\x9d\xab\x63\x5f\xac\x55\xf8\xd0\x69\x11\xb6\xa7\x1e\x35\xc1\x79\x7a\x27\x05\xa0\x18\x02\x80\x2a\x4a\x91\x84\x0d\x03\x3e\x15\x80\x3f\x5f\x27\xa7\x13\x0c\xc1\x45\x52\x41\x05\x00\x86\xc2\xa7\xf7\x99\xe9\xba\x27\x0c\x5d\x24\xcb\x3d\x02\x6e\xa0\x41\x86\x21\xa4\xb4\x83\x54\xd5\xa0\x9b\x2a\xa0\x02\x87\x4f\xb1\xee\x4a\x90\xfb\x14\x43\x80\x65\x18\x03\x66\xb3\x48\x39\x12\xe1\x02\x15\xc0\xac\x0a\xf4\x8d\xfc\xa0\x7b\x23\xba\xc5\x3a\x11\x52\xa5\x19\x2d\xd1\x9e\x13\xf9\xef\x4f\x9f\x4b\xbc\xdd\xfd\x8c\xea\x3b\xbe\xe3\xc9\xf2\xe9\x64\xcb\x9b\x2a\xbd\x31\x16\xba\x5f\xc5\x28\xd4\x22\x76\x54\xa0\x01\xe9\x40\x8b\x2b\x85\xc5\xf8\x36\x00\x37\x0d\x81\x0f\x36\x58\x49\x11\xf7\xdf\x36\x0d\xa8\x95\x43\x93\xe9\x84\x1d\x4a\x69\x8c\xc4\xe3\x9c\xa1\xfa\x16\x9f\xec\x22\x43\xc7\x97\x75\xcb\xc6\xf3\x37\x44\xcf\x48\xdc\x0d\xd6\xca\xac\x53\xb4\x7b\x71\x71\x48\xc6\xf4\x7e\x1d\x31\xa0\x08\xde\x72\xa8\x00\x55\x06\x3e\x14\xff\x72\x66\x08\x5c\xf2\xc0\x88\x32\x13\x44\xc6\x9e\x45\x10\xba\x81\x8e\x01\x42\x08\x15\x02\xf7\x07\xdb\x63\xb4\xb2\xd9\x2f\xbb\xbc\x20\xf8\x4b\x21\x06\x9a\x48\xf8\xcb\x7d\x7c\x11\xcc\xfd\x89\xf0\xff\xfd\x17\xc4\xec\x1a\x9f\xd2\xd9\xba\xd9\x73\xa6\x80\xcb\x97\x0b\x1e\x56\x39\xa4\x80\x13\x85\x04\xb0\x4e\xb8\x57\x3d\x13\xe8\x4b\x2e\xf1\xee\xb2\x4d\x2c\x87\x0d\xf2\x0c\x5e\x15\x68\xbf\x92\x89\xaa\x1a\x15\xa0\x94\xfe\x9d\x56\xee\x1b\x57\x51\x56\x4e\xbf\x22\xac\x7f\x3b\x71\x80\x30\x52\x35\xd5\x3f\xd8\xd2\xbb\xb0\x02\x7d\xd0\x33\xba\x3c\x5d\x1f\xed\x8b\xad\x3c\x2e\x54\x4a\xf6\xbf\x7e\xde\x4f\xcc\x81\x0b\x25\x72\xb2\xf2\xa0\xee\x1c\x47\x79\xd7\xb5\x1e\x5d\x63\x65\x1b\xc0\x89\x98\xeb\xba\x50\x9d\x29\xa8\xb9\xfe\x3e\x2e\x76\xc5\x71\xd7\xa3\x1d\x3a\xfa\xec\x1c\x1c\xa5\xaa\xd4\x2f\x76\xf4\x4c\x4d\xb7\xee\x7c\x60\x10\x3b\x79\xf3\x31\x64\x9a\xbd\x97\x62\xdf\x79\x63\xd5\x45\x60\x53\x46\x07\x09\x30\xd9\xe2\xe0\xc6\xba\x08\xda\x2b\x5d\x9e\x4f\xa3\x9d\x98\x8e\xb7\x5d\x12\xd8\x3f\xfa\x93\x66\x98\xb0\xd0\xa2\x05\xcc\xdd\xb5\x26\x2c\x77\x2c\x7d\x26\xef\x17\xa9\x88\x5e\x83\x49\xde\x8d\xf5\x63\xe5\xad\x36\x44\xe2\x9e\xad\x2f\xbe\x76\xe6\x48\x16\x5a\xa5\x0f\x34\x33\xf3\x85\xa8\x15\xc4\x9e\x97\xab\x2a\x89\x20\xd9\x5e\x49\x5d\x36\x79\xb2\x6f\x83\x13\x0b\xfd\xe7\x0e\x1f\x3c\x13\xbb\x9a\x13\xd2\x7b\xeb\xac\x03\xee\xb5\xc7\xc2\xd2\x7a\x6e\x0f\x7a\xb2\x4d\x3a\xaf\xb3\x01\x53\xee\x62\xd7\xee\xb3\xbb\x86\x2d\xcf\x97\xa2\xc3\xe2\xea\xbc\x9a\xeb\x55\x92\x42\x27\x3b\xb3\x24\x7c\xbb\x69\xa3\xb5\x2a\xd7\x03\x14\xc0\x83\x8b\x0f\xcd\x5d\x5f\x9e\x4a\x71\x57\x6b\xa2\xcf\xce\xef\xe3\xc0\xc4\x95\x5f\x6c\x16\x8f\xc3\xfa\xc1\x08\xb4\xf4\x30\x4a\xba\x5d\xa8\x85\xa6\x53\x1c\x9d\x6b\x35\xd3\xef\x59\xa9\xda\xca\xaf\x93\x92\xfb\x4f\x00\x00\x00\xff\xff\x3c\x02\x7a\xe8\x26\x08\x00\x00")

func certs_cert_files_dcidevpublic_pem() ([]byte, error) {
	return bindata_read(
		_certs_cert_files_dcidevpublic_pem,
		"../../certs/cert_files/dcidevpublic.pem",
	)
}

var _certs_cert_files_dcipublic_pem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x4b\xb3\xaa\x48\xb3\x9d\xf3\x2b\x88\x1e\x5e\x4f\x1f\x11\x14\xf5\x46\xec\x41\x55\x51\x3c\x54\x50\xde\xc2\x0c\x01\x0b\x90\x87\xca\xa3\x80\x5f\x7f\x63\xef\xdd\x37\xce\xe9\xaf\x3b\xe2\x63\x98\x54\x65\x2e\x56\xae\x95\x64\xdb\xdf\x8a\x34\xee\x3e\xce\x2e\xfb\xc1\x4a\x4d\x15\xe5\x35\x8b\x9a\xba\x7b\x37\x25\xeb\x45\x65\x9e\x44\x5d\x9a\xfc\x60\x91\xc1\x7e\xb0\xff\xf3\x33\x49\xc7\x2e\x7d\xc7\x59\x54\xa7\xd3\xcf\xb8\xa9\x18\x26\x6f\xdb\x3e\x7d\x7f\x20\xf6\x83\x75\xed\x1f\xac\xed\xb0\x1f\x2c\x78\xe7\x73\x53\x47\x3f\xd8\x13\xfb\xc1\xda\x71\xd3\x75\x6d\x12\x95\xe9\x0f\xf6\xcc\x7e\xb0\x7f\x28\x8d\x14\x25\xc9\xd7\xf5\x1f\xac\x56\xc7\x3f\xff\xf8\xc1\x7e\x55\xcf\xba\xee\xf9\xbf\xcb\x65\x9c\xbe\xbb\xf6\x27\x69\x92\xff\x3f\xb5\x7c\xa7\xcf\xa6\xcd\xbb\xe6\x3d\x2d\xff\x42\xa2\x34\xec\x57\x12\xd6\x4e\xe3\xfe\x9d\xb2\x28\x7d\x77\xf9\x3d\x8f\xa3\x2e\x65\x41\xdf\x65\xcd\x3b\xef\x26\xf6\x4f\x56\xe1\x19\xe6\xcf\xcf\x07\x62\x45\x33\x58\x84\x2d\x47\x93\x35\x04\x1c\xfc\x15\x65\x74\x4d\x53\x86\x02\x21\x18\x45\x04\x50\x0d\x02\xa2\x69\x36\x57\x6d\x0a\x7e\x86\xe1\xd2\xa5\x92\x19\x1c\x8e\x4d\xa8\x65\x43\x6c\x00\x13\x9f\xa0\x09\x28\xb9\x99\x23\x9a\xc1\x01\x12\xc3\x63\x20\x08\x1c\x50\x7a\x8e\x6e\x01\x2a\x91\x40\xf2\x4c\x53\xc3\x34\x81\x71\x55\x8a\x37\x7e\x93\xe9\x96\x4e\xb1\xf9\x15\x57\x31\x7d\x3a\x01\xbf\xe7\x12\xd5\x78\x04\xfe\x58\xea\x56\x43\x19\x05\x7c\xbd\x3c\xe2\x51\x56\x6f\x9c\x95\x85\x8a\xb5\x39\x55\xc6\x70\xb3\x29\xb1\xfd\x4d\x71\x2a\x70\xa7\xa3\x56\x01\x2b\x17\xa3\x51\x7f\x44\xaa\xc5\xc5\x52\x33\x9c\x78\xa3\x8c\x6b\x6b\x66\x4e\x55\x32\x84\x8a\xfc\x08\xd5\x47\x1f\xf0\xfb\xee\x24\x1c\xca\x58\xd9\xcf\xd1\xd5\x1a\xe2\xfa\x31\xe8\x8e\x4e\xf5\x6f\x04\x12\x9e\x9e\xea\x6d\x82\x38\xf0\xad\x47\x6a\x43\x27\xf4\x8d\x15\x13\x57\x2e\x31\x79\x6f\x4a\x94\xb2\x8a\x7c\x23\x4b\x14\x97\x98\x57\x8f\x8b\x94\xfd\x14\x5d\xad\x8d\x86\x38\x62\xcd\x1a\x55\xb3\xd8\xd0\x1d\x32\xea\x8e\xc6\xeb\x4e\x4c\x75\x47\x9b\xfd\x2c\x36\x18\xbd\x00\x7f\x0f\x16\x10\xe8\x36\xa6\x2a\xfd\xaa\x7a\xc2\x63\x86\x6f\xfc\x2a\x8b\xfc\x35\x31\xf9\x7d\x9f\xa8\x87\xe1\x86\xa0\x1f\xf8\xe3\x33\x54\x64\x8e\x09\x7d\x73\x54\x66\x10\x7e\x32\x0a\x81\xae\xe3\xbc\xe9\x43\xc5\x5b\x27\x8a\x37\x05\x7c\x96\xdd\x2a\xef\x9b\x13\x07\x21\x60\x6b\xff\xd9\x15\xc8\x40\x13\x48\x84\xe0\x0b\x90\x10\x02\x66\x83\x08\xc1\x10\x9c\x0b\x39\x8a\x16\xd4\x7e\xde\xc6\xde\xe5\x32\xee\x70\x12\x1a\x2e\x79\x6e\xef\xb1\x39\xfa\x4f\x7f\x16\x2e\x1e\x29\x0c\xa1\x9e\x2f\x80\x11\x5e\x10\x23\x3e\x83\xe2\x0a\x09\x17\xf1\xdd\x84\x2b\x23\xbf\x47\xfa\x2e\xce\xc9\xeb\x4c\xba\xd9\xb7\xb5\xf8\x94\xcd\x07\x77\xdc\x0d\xf7\x2c\xf0\x94\x7b\x17\x2c\x77\xa6\xdc\x68\x02\x67\xa0\xb2\x64\x1e\xf7\xa8\x75\x9d\xb7\xeb\xf9\xe2\xc5\x8e\xea\x71\x5b\xa5\x01\x6c\x52\x5b\x78\x1b\x81\x27\x8b\xc3\x62\xb8\x2c\xb7\x1b\x4d\xce\x16\x47\x47\x86\xaf\x40\x3e\xbf\x84\x57\x6f\x6d\xa9\xb2\x35\x40\x5d\x5c\x99\x7d\xb1\x0c\x37\xc1\xb2\xbb\x9f\xe4\xfd\x83\x27\x8f\xe5\x6e\x40\x47\x3f\x08\xe8\x78\xc4\xa2\xb1\xe0\x1e\x51\x98\x2c\xee\x6e\x10\xd9\x75\xbb\x53\xae\xc7\xc1\x96\x56\x6b\x10\x3e\x4d\xae\x7c\x2d\x06\x14\x31\xf5\xe4\x1c\x21\xcd\x12\xf9\xb2\xe7\x7d\xf7\x3e\xb6\xfa\x51\xa8\x6a\xb9\xdc\x19\x28\xa0\xaf\xe8\x24\x1f\xa7\x6d\xa7\x41\x4a\xaf\x79\x77\x09\x77\xb5\x12\xad\xc1\xb8\x7f\x99\xb0\xe9\x97\x1a\x3d\x15\x0c\x74\xb2\xe3\xcd\x9e\x77\x79\xff\x26\x9d\xb1\xaf\x1c\x8b\x86\x78\x51\x4e\x5c\x61\x0b\x7d\xb1\xbe\x40\xa2\xbd\xf8\xe7\xeb\xb1\xbf\xc4\x08\x50\x0c\x40\x74\x46\x80\x73\x29\x21\x06\xd4\x01\x55\x18\xb0\x72\x13\x4c\x31\x5c\x52\x13\xe9\x00\x50\xf5\x53\x75\x16\x57\x42\x18\x50\x19\x04\xda\x91\x06\x10\x9a\xae\x0a\x28\x56\xd0\xa7\xa4\x4d\x57\x86\x54\x47\x3a\x58\x7f\xca\x3b\x61\xa4\xef\xcb\x18\x50\x4d\x6e\x24\x20\x7c\xea\x41\xb5\x76\x58\x97\x40\xaf\xa3\x89\x1c\x5f\xa0\xc9\xf2\xb0\x49\x54\x8b\x9e\xf3\xdd\x10\x08\x87\xf6\x77\xf9\x33\x5f\xfa\xe7\x93\x47\xe4\xc7\x53\x3c\xe3\xee\x2c\x3d\xa6\x53\x65\x4c\x37\x09\x26\x5f\xc9\x6c\x80\xbd\x02\xba\x3a\x26\x0a\xe2\x91\x62\x03\x45\x59\xfa\x1c\x84\x63\x0c\x75\xe9\x41\x19\x83\xfe\x06\x93\x60\xff\xc8\x67\x5c\xa2\x02\xf1\x34\xed\x8b\xf0\x7a\xe0\x22\x3f\x7c\x06\xbc\xcc\x85\x57\xbd\x0f\xf9\xfd\xe3\xdb\x48\x9b\xe2\xc6\x73\x43\x5c\x79\x94\xb9\x09\xc6\x33\x51\xf6\x53\x6a\xef\x28\x02\x81\x12\xae\xb1\x0e\x4c\x0d\xea\x6a\xf0\xdb\x37\x63\x08\x95\x86\x46\x12\x78\x40\x42\xde\x90\x60\x19\x9a\x31\x05\x41\x10\x30\xbf\xfc\xbd\x2f\x62\x01\xfc\xa3\x8a\x8e\xc1\xaf\x44\x33\x40\x59\x61\xfd\xe2\x83\xf7\x26\xe6\x97\x8d\xbd\xf9\xbf\xcd\x86\x90\xb7\x9e\xe1\xac\xf5\x81\x70\xe0\x74\xb8\xfb\xee\x82\x46\xcd\x40\x87\x11\x90\xb1\x84\x06\x3b\x3d\xcf\x92\x2d\xe9\x47\x6d\x5e\x2d\xbb\xb6\x5d\x22\xee\xa4\x49\x67\x1d\x7d\x1f\xc6\xa6\xd9\xe8\x28\x42\xbf\x3b\x96\xf9\x9b\x65\x03\xcd\xfc\x77\x2b\x83\xef\x8e\x98\x6b\x2c\x13\xd3\xcd\x6c\x65\x58\xf9\xab\x9d\x74\x0e\xcf\xcc\xd9\x9d\x1f\x9d\x2f\x2d\x36\xda\xf8\x3e\x2b\x6b\x4a\x88\xbc\x84\xa4\xf9\x24\x0a\x83\x24\xdc\x00\x62\x22\xa8\x69\xf0\x46\x6d\x04\xfc\x16\x46\x26\x14\xc0\xd1\xde\xa0\x10\x71\x8a\x4c\x5c\x26\xdb\xb6\x4e\xd3\x8e\x75\x0c\x9a\x9d\x11\x12\xbc\xb0\x86\x7b\x7f\x36\x84\xd9\xdc\x6a\x52\x42\x4d\x00\x00\x0c\x57\x92\x20\xde\x30\x00\xc0\x94\x00\x26\xd4\x22\x5a\x06\x0e\x25\x7a\xa7\xb2\xc7\x64\x3b\x62\xaf\x1b\x61\x53\x5f\xdf\xe7\xc6\x58\xac\x71\xd2\xef\x23\xbe\x12\x76\xb2\x55\xf4\xa6\x35\x9d\xf1\xca\x00\x39\x06\x99\x75\xf2\x4a\x91\x13\x4e\x0b\xd1\x4b\xda\xad\x3c\x05\xf2\x65\x7d\x08\x27\xc6\x98\x8b\xec\x72\x5c\x47\xed\x4b\x5e\x5d\x56\x59\xfd\x4c\x62\x90\x10\xa9\xb7\xb7\xbc\x90\xc4\x1b\xd2\xf7\x32\x8a\xac\xc5\x7b\x1d\x6e\xaa\x86\xee\x17\xd7\x2d\x9c\x78\x4d\x07\xa3\xda\x1f\xd2\x57\xb1\x67\x26\x0a\x00\xf0\x13\x73\xbf\xd8\xba\x00\x00\x0c\x28\x54\x75\xec\x22\x4d\x99\x45\x71\x1a\xac\xfb\xaa\x26\x9b\xde\x35\x1e\x47\x0e\x34\xf5\x3a\x57\xe2\x35\x78\x08\x12\xf0\x15\xf7\x16\xb8\x6b\xc2\x88\x59\xe6\x7d\x42\xcc\xcb\xe3\x7e\x5a\x99\x5a\x55\x2c\x96\x45\xe1\x7a\x6f\x6c\xde\xd7\xe7\x8a\xf4\x8f\x15\x59\x1c\x84\x03\x07\x62\x35\x17\x63\x3e\x39\x9b\x20\x21\x30\x7d\x0a\x97\x8d\xb0\xba\x01\x66\xb3\x75\x79\x5b\x15\x4c\x3b\x05\x53\xfa\x54\x22\x49\xb3\x33\x9c\x1d\xb1\xa2\xfa\x3e\xb9\xca\xb2\x0f\xfe\x42\xb8\x3c\xbf\xfe\x86\xd0\x94\x86\xe5\xce\x54\x19\xed\x16\xdc\xf0\x4d\x2e\xf5\xf3\xc6\x40\xcb\x0c\xc5\xfa\xb8\x80\xa7\x4e\xc2\xd5\x75\x83\x8a\x51\x2b\xdc\xd8\x6b\x89\x46\x90\x7a\x13\x9f\xef\x72\xa9\x08\x45\x3b\x9e\x5a\xdd\x16\x4b\xb0\x8c\xf4\x80\x69\x94\xb4\x18\xf2\x1d\xe9\xfb\xb1\xe4\x77\x49\x97\x12\xf0\x6f\x7f\x64\xe9\x6b\xdc\x4b\x7d\x3b\xee\xae\x65\xa6\x47\x6f\xe9\x9e\xf5\xa2\xe6\x9b\xcc\xc6\x17\xd3\x1d\x67\x6f\xd7\xf9\x9c\x1f\xe4\x6a\x21\xf9\x57\x5a\xaf\xb9\x7b\xa0\x96\x0e\x97\x89\xcf\x84\xdf\x1e\x45\x18\x55\x77\x3d\x12\xd5\xba\xd4\x57\x57\xcd\xf3\x94\xd3\x3e\x6d\xab\xc7\xfd\x09\x1f\x0c\xb8\x6d\xc6\xa1\xa4\xcf\xd3\xa2\xd2\xa4\x4b\x25\xa6\x9a\x7f\xee\x3b\xaf\xee\x65\xdb\xb1\x6e\x92\x13\x69\xc8\x75\x60\xd7\x86\x97\x79\x7a\xe4\x07\x71\xcc\x77\xbe\xec\x2f\xc4\xb9\xa9\x72\xf5\x40\x5b\x86\xf2\x97\x75\xbf\x97\xeb\xd7\xe1\xbc\x1a\x9a\xf5\xa3\x8a\xf9\x6e\x38\x1c\x82\x78\x79\x89\xc4\x66\x80\xe9\xf0\xce\x97\x87\xb1\x7a\xf9\x97\x76\xad\x8c\xc5\xab\xdc\x83\xbb\xca\x13\x5b\xe3\x40\xf7\xaa\x1d\xa6\xa6\xa3\xfa\x46\x41\x48\xf3\xdb\x55\x7d\x8d\xf7\x14\x7b\x95\x71\xe8\x8b\x3d\xe7\xba\x47\xcb\x91\x40\xba\x70\x82\xad\x55\x38\xe2\x41\x77\x53\x93\x54\x57\xde\xb4\xcd\x7c\x4a\xda\xae\x89\xe9\xe2\xce\x88\x93\x3b\xc4\xc5\x31\x6e\xd2\x38\xc0\xcf\x09\x66\x30\x59\xe3\x61\x6f\x84\x91\x35\x26\xce\x1a\x26\xe1\x82\x3b\x78\x30\xd9\x38\x0b\x57\x35\xf2\xf4\x5e\x6b\xf5\x1d\x72\x61\x52\x2c\x0f\xd9\xfb\xbc\x62\x2e\x6f\xee\xe3\x7b\x89\xc2\x86\xf4\xcf\x15\x8a\xf9\xbf\x00\x00\x00\xff\xff\x42\x97\xe6\x16\x42\x0a\x00\x00")

func certs_cert_files_dcipublic_pem() ([]byte, error) {
	return bindata_read(
		_certs_cert_files_dcipublic_pem,
		"../../certs/cert_files/dcipublic.pem",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"../../certs/cert_files/dcidevpublic.pem": certs_cert_files_dcidevpublic_pem,
	"../../certs/cert_files/dcipublic.pem": certs_cert_files_dcipublic_pem,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"..": &_bintree_t{nil, map[string]*_bintree_t{
		"..": &_bintree_t{nil, map[string]*_bintree_t{
			"certs": &_bintree_t{nil, map[string]*_bintree_t{
				"cert_files": &_bintree_t{nil, map[string]*_bintree_t{
					"dcidevpublic.pem": &_bintree_t{certs_cert_files_dcidevpublic_pem, map[string]*_bintree_t{
					}},
					"dcipublic.pem": &_bintree_t{certs_cert_files_dcipublic_pem, map[string]*_bintree_t{
					}},
				}},
			}},
		}},
	}},
}}
